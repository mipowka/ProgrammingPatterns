Инкапсулирует запрос как объект, позволяя передавать параметры, очередность выполнения и отмену операций.

1. @Transactional
Аннотация @Transactional в Spring может быть рассмотрена как использование паттерна Command.
    Хотя это не совсем стандартная реализация паттерна, она демонстрирует идею "инкапсуляции действия".
    Когда вы оборачиваете методы в транзакцию, вы фактически инкапсулируете команду (выполнение какого-то
    действия в рамках транзакции), которая будет выполнена, если все условия выполнены.

2. CommandLineRunner и ApplicationRunner
Интерфейсы CommandLineRunner и ApplicationRunner в Spring Boot могут также рассматриваться как примеры
    использования паттерна Command. Эти интерфейсы позволяют вам инкапсулировать логику, которую нужно
    выполнить при старте приложения, как команды. Их реализация включает в себя выполнение определенной
    задачи (команды) при запуске приложения.

        CommandLineRunner: Это интерфейс, который позволяет выполнить команду сразу после старта приложения,
        и передает аргументы командной строки.

        ApplicationRunner: Похож на CommandLineRunner, но предоставляет интерфейс с объектом ApplicationArguments,
        который более удобно используется для работы с аргументами запуска.

3. Spring Integration: MessageHandler и Channel
В Spring Integration также активно используется паттерн Command для обработки сообщений. В этом случае
    обработчики сообщений (например, MessageHandler) могут рассматриваться как объекты-команды, которые
    выполняются в ответ на сообщение.

4. Spring Batch: Шаги в задаче
В Spring Batch каждый шаг (Step) представляет собой независимую команду. Это может быть операция чтения данных,
    обработки и записи в базу данных или файл. Каждое действие (например, загрузка данных или преобразование информации)
    инкапсулировано в шаге и может быть выполнено по очереди в рамках задачи (Job).

=================================================================================================================
Паттерн Command в Spring Framework используется в таких компонентах как:
    CommandLineRunner и ApplicationRunner — позволяют инкапсулировать логику,
    выполняемую при запуске приложения, как команду.

    Handler в Spring Integration — обработчики сообщений могут рассматриваться как
    команды, выполняющие действия на основе полученных сообщений.

    Spring Batch — каждый шаг в процессе обработки данных является командой, которая
    инкапсулирует определенную задачу.