builder - позволяет проще расширять класс не меняя или не создавая новый конструктор класса
    а используя публичный вложенный статический класс билдер или отдельный интерфейс и класс который его реализует
    в котором все эти переменные будут добавляться сам класс который будет использовать билдер должен
    являться неизменяемым иначе легче использовать пустой конструктор и методы сет

В Spring паттерн Builder активно используется для конфигурации различных объектов, таких как бины,
    подключения, настройки, а также для создания сложных объектов в рамках приложений. Рассмотрим основные
    классы и компоненты Spring, которые используют паттерн Builder.

JdbcTemplate (Spring JDBC)
В Spring JDBC JdbcTemplate использует паттерн Builder для настройки объектов с множеством параметров,
    таких как соединение с базой данных, параметры запросов, настройки обработки результатов и т. д.

RestTemplate (Spring Web)
RestTemplate — это еще один класс, который использует паттерн Builder для упрощения конфигурации HTTP-запросов.
    Он позволяет настраивать различные параметры запроса, такие как заголовки, параметры и типы тела запросов.

Builder в Spring Data (например, CriteriaBuilder в JPA)
В Spring Data JPA паттерн Builder реализован через CriteriaBuilder, который позволяет строить
    динамические запросы к базе данных с использованием шагов.

TaskExecutor (для многозадачности)
TaskExecutor и его реализации, такие как ThreadPoolTaskExecutor, используют паттерн Builder для конфигурации
    различных аспектов многозадачности, таких как размеры пулов потоков и очередь задач.

WebClient (Spring WebFlux)
WebClient из Spring WebFlux — это асинхронный клиент для выполнения HTTP-запросов, который также использует
    паттерн Builder для создания запросов с различными параметрами, такими как URL, заголовки и тела запросов.
======================================================================================================================
Паттерн Builder широко используется в Spring Framework для конфигурации и создания объектов с
    множественными параметрами. Это позволяет создавать сложные объекты с гибкой настройкой, избегая
    необходимости использования множества конструкторов или множества параметров в методах.

Вот основные классы в Spring, использующие паттерн Builder:
    JdbcTemplate — для настройки и выполнения запросов к базе данных.
    RestTemplate — для конфигурации HTTP-запросов.
    CriteriaBuilder — для динамического построения запросов в JPA.
    ThreadPoolTaskExecutor — для конфигурации многозадачности.
    WebClient — для конфигурации асинхронных HTTP-запросов в Spring WebFlux.

Эти классы и компоненты позволяют гибко настраивать объекты в Spring, используя паттерн Builder для упрощения
    конфигурации и создания сложных объектов.