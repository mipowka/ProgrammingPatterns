паттерн используется для делегирования создания экземпляров другому классу

Spring использует Factory Method в нескольких ключевых компонентах, и в частности, в контексте управления
    зависимостями, конфигурации и фабричных методов для бинов. Рассмотрим основные классы в Spring,
    которые реализуют или используют паттерн Factory Method.

ApplicationContext и BeanFactory
Основная реализация паттерна Factory Method в Spring — это использование интерфейсов ApplicationContext и
    BeanFactory для создания и управления бинами. Spring Framework использует эти интерфейсы как фабричные
    методы для создания объектов и их внедрения в приложение. Бины создаются по запросу, а также могут быть
    настроены через конфигурацию.

BeanFactory
BeanFactory — это базовый интерфейс для Spring контейнера, который также реализует паттерн Factory Method
    для создания бинов. Он позволяет создавать и управлять бинами в зависимости от конфигурации и других факторов.
    Хотя в реальных приложениях ApplicationContext используется чаще, чем BeanFactory, этот интерфейс тоже
    использует фабричные методы для создания объектов.

@Configuration и @Bean аннотации
В Spring с использованием Java Config мы можем использовать аннотацию @Bean для реализации фабричных методов.
    Каждый метод, аннотированный @Bean, служит фабричным методом для создания и настройки объектов.

JdbcTemplate (Spring JDBC)
В Spring JDBC класс JdbcTemplate реализует паттерн Factory Method для конфигурации объектов DataSource и их
    использования для выполнения запросов. Здесь JdbcTemplate сам является фабрикой для создания объектов
    для работы с базой данных.

@Component и Сканирование компонентов
Аннотация @Component и использование контекста Spring также можно рассматривать как механизм, который
    реализует Factory Method. Когда классы аннотируются как @Component (или его производные, такие
    как @Service, @Repository, @Controller), Spring автоматически создает их экземпляры с помощью
    фабричных методов, основанных на конфигурации компонента.

FactoryBean
FactoryBean — это интерфейс, который в самом Spring Framework используется для создания объектов через
    фабричный метод. Это позволяет создать более сложные бины, которые могут требовать
    дополнительной логики при создании.

@Value аннотация (для конфигурации и создания объектов)
Аннотация @Value позволяет внедрять значения из конфигурации или внешних источников, таких как свойства или
    системные параметры. Она фактически служит в качестве фабричного метода для создания значений, инжектируемых
    в поля и параметры методов.

======================================================================================================================

В Spring Framework паттерн Factory Method широко используется для создания и конфигурации объектов.
    Некоторые ключевые компоненты, использующие этот паттерн, включают:
        ApplicationContext и BeanFactory — для создания и управления бинами.
        @Bean аннотация — для создания бинов через методы Java-конфигурации.
        JdbcTemplate и другие шаблоны — для создания объектов для работы с базами данных.
        FactoryBean — для более сложных случаев создания объектов через фабричные методы.
        Аннотация @Component — для автоматического создания бинов через компонентный сканер.

Эти классы и механизмы позволяют Spring инкапсулировать логику создания объектов и упрощать процесс конфигурации
    и внедрения зависимостей.